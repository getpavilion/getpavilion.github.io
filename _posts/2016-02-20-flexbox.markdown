---
title:  "Flexbox"
date:   2016-03-31 17:06:26 +0200
postid: flexbox
---

##### Flexbox columns
Instead of using a `.row` to contain your columns, you can use `.row-flex` and apply the Flexbox Layout Model for Pavilion's columns.
Flex-columns take up the maximum possible width. The normal column classes still apply within the 'flexboxed' row. To use a flex-column add a div
with the class `.col` inside a `.row-flex`.

Please read the <a href="#grid" data-scroll>grid</a> documentation first if you haven't done so.

<div class="row-flex">
    <div class="col-pl-20">
        <div class="exb">.col-*-20</div>
    </div>
    <div class="col">
        <div class="exb">.col</div>
    </div>
    <div class="col-pl-33">
        <div class="exb">.col-*-33</div>
    </div>
    <div class="col">
        <div class="exb">.col</div>
    </div>
    <div class="col">
        <div class="exb">.col</div>
    </div>
</div>
<div class="row-flex">
    <div class="col">
        <div class="exb">.col</div>
    </div>
    <div class="col-pl-40">
        <div class="exb">.col-*-40</div>
    </div>
    <div class="col">
        <div class="exb">.col</div>
    </div>
    <div class="col">
        <div class="exb">.col</div>
    </div>
    <div class="col">
        <div class="exb">.col</div>
    </div>
    <div class="col">
        <div class="exb">.col</div>
    </div>
</div>

##### Flexbox positioning
Apply the class `.display-flex` to create a flexbox container element. You can now use flex utility classes to align and arrange the contained items according to the
Flex Box Layout Model. Pavilion has classes for most of the specs' properties. Since it is useless to create classes for properties like flex grow, 
shrink, basis and order, these are not included. Want to learn more about flexbox? Check out <a href="https://scotch.io/tutorials/a-visual-guide-to-css3-flexbox-properties#flexbox-container-properties" target="_blank">this handy tutorial by Scotch.io</a>.

For example, centering horizontally and vertically is easy with flexbox:
<div class="display-flex exfb flex-align-items-center flex-justify-content-center">
    <button class="button-default">I am centered X and Y</button>
</div>

{% highlight html %}
<div class="display-flex flex-align-items-center flex-justify-content-center">
    <button class="button-default">I am centered X and Y</button>
</div>
{% endhighlight %}

<table> 
    <!-- Table head -->
    <thead> 
        <tr> 
            <th class="cell-fixed-width">Display flex</th> 
            <th>Behaviour</th> 
        </tr> 
    </thead>
    
    <!-- Table body -->
    <tbody> 
        <tr> 
            <td class="cell-fixed-width"><code>.display-flex</code></td> 
            <td>Creates flex container</td> 
        </tr>
        <tr> 
            <td class="cell-fixed-width"><code>.display-inline-flex</code></td> 
            <td>Creates inline flex container</td> 
        </tr>
        <tr> 
            <td class="cell-fixed-width"><code>.row-flex</code></td> 
            <td>Creates row flex container (for columns)</td> 
        </tr>
    </tbody>
</table>

<table> 
    <!-- Table head -->
    <thead> 
        <tr> 
            <th class="cell-fixed-width">Flex direction</th> 
            <th>Behaviour</th>
        </tr> 
    </thead>
    
    <!-- Table body -->
    <tbody> 
        <tr> 
            <td class="cell-fixed-width"><code>.flex-direction-row</code></td> 
            <td>Set main axis direction left to right <span class="text-primary">(default)</span></td> 
        </tr>
        <tr> 
            <td class="cell-fixed-width"><code>.flex-direction-row-reverse</code></td> 
            <td>Set main axis direction right to left</td> 
        </tr>
        <tr> 
            <td class="cell-fixed-width"><code>.flex-direction-column</code></td> 
            <td>Set main axis direction top to bottom</td> 
        </tr>
        <tr> 
            <td class="cell-fixed-width"><code>.flex-direction-column-reverse</code></td> 
            <td>Set main axis direction bottom to top</td> 
        </tr>
    </tbody>
</table>

<table> 
    <!-- Table head -->
    <thead> 
        <tr> 
            <th class="cell-fixed-width">Flex wrap</th> 
            <th>Behaviour</th> 
        </tr> 
    </thead>
    
    <!-- Table body -->
    <tbody> 
        <tr> 
            <td class="cell-fixed-width"><code>.flex-no-wrap</code></td> 
            <td>Keep flex children on a single-line <span class="text-primary">(default)</span></td> 
        </tr>
        <tr> 
            <td class="cell-fixed-width"><code>.flex-wrap</code></td> 
            <td>Wrap flex children to multiple lines</td> 
        </tr>
        <tr> 
            <td class="cell-fixed-width"><code>.flex-wrap-reverse</code></td> 
            <td>Same as above, but bottom to top</td> 
        </tr>
    </tbody>
</table>

<table> 
    <!-- Table head -->
    <thead> 
        <tr> 
            <th class="cell-fixed-width">Justify content (main axis)</th> 
            <th>Behaviour</th> 
        </tr> 
    </thead>
    
    <!-- Table body -->
    <tbody> 
        <tr> 
            <td class="cell-fixed-width"><code>.flex-justify-content-start</code></td> 
            <td>Align items towards the main axis' start <span class="text-primary">(default)</span></td> 
        </tr>
        <tr> 
            <td class="cell-fixed-width"><code>.flex-justify-content-end</code></td> 
            <td>Align items towards the main axis' end</td> 
        </tr>
        <tr> 
            <td class="cell-fixed-width"><code>.flex-justify-content-center</code></td> 
            <td>Align items between the main axis' start/end</td> 
        </tr>
        <tr> 
            <td class="cell-fixed-width"><code>.flex-justify-content-between</code></td> 
            <td>Distribute items between the main axis' start/end, space between</td> 
        </tr>
        <tr> 
            <td class="cell-fixed-width"><code>.flex-justify-content-around</code></td> 
            <td>Distribute items between the main axis' start/end, space around</td> 
        </tr>
    </tbody>
</table>

<table> 
    <!-- Table head -->
    <thead> 
        <tr> 
            <th class="cell-fixed-width">Align items (cross axis)</th> 
            <th>Behaviour</th> 
        </tr> 
    </thead>
    
    <!-- Table body -->
    <tbody> 
        <tr> 
            <td class="cell-fixed-width"><code>.flex-align-items-stretch</code></td> 
            <td>Stretch items along the cross-axis <span class="text-primary">(default)</span></td> 
        </tr>
        <tr> 
            <td class="cell-fixed-width"><code>.flex-align-items-start</code></td> 
            <td>Align items towards the cross-axis' start</td> 
        </tr>
        <tr> 
            <td class="cell-fixed-width"><code>.flex-align-items-end</code></td> 
            <td>Align items towards the cross-axis' end</td> 
        </tr>
        <tr> 
            <td class="cell-fixed-width"><code>.flex-align-items-center</code></td> 
            <td>Align items between the cross-axis' start/end</td> 
        </tr>
        <tr> 
            <td class="cell-fixed-width"><code>.flex-align-items-baseline</code></td> 
            <td>Align items to their baselines</td> 
        </tr> 
    </tbody>
</table>

<table> 
    <!-- Table head -->
    <thead> 
        <tr> 
            <th class="cell-fixed-width">Align multiple lines (cross axis)</th> 
            <th>Behaviour</th> 
        </tr> 
    </thead>
    
    <!-- Table body -->
    <tbody>
        <tr> 
            <td class="cell-fixed-width"><code>.flex-align-content-stretch</code></td> 
            <td>Stretch multiline contents along the cross-axis <span class="text-primary">(default)</span></td> 
        </tr>
        <tr> 
            <td class="cell-fixed-width"><code>.flex-align-content-start</code></td> 
            <td>Align multiline contents towards the cross-axis' start</td> 
        </tr>
        <tr> 
            <td class="cell-fixed-width"><code>.flex-align-content-end</code></td> 
            <td>Align multiline contents towards the cross-axis' end</td> 
        </tr>
        <tr> 
            <td class="cell-fixed-width"><code>.flex-align-content-center</code></td> 
            <td>Align multiline contents between the cross-axis' start/end</td> 
        </tr>
        <tr> 
            <td class="cell-fixed-width"><code>.flex-align-content-between</code></td> 
            <td>Distribute items between the cross axis' start/end, space between</td> 
        </tr> 
        <tr> 
            <td class="cell-fixed-width"><code>.flex-align-content-around</code></td> 
            <td>Distribute items between the cross axis' start/end, space around</td> 
        </tr>
    </tbody>
</table>

<table> 
    <!-- Table head -->
    <thead> 
        <tr> 
            <th class="cell-fixed-width">Align flex child (apply on child)</th> 
            <th>Behaviour</th> 
        </tr> 
    </thead>
    
    <!-- Table body -->
    <tbody> 
        <tr> 
            <td class="cell-fixed-width"><code>.flex-align-self-start</code></td> 
            <td>Align flex child towards the cross-axis' start</td> 
        </tr>
        <tr> 
            <td class="cell-fixed-width"><code>.flex-align-self-end</code></td> 
            <td>Align flex child towards the cross-axis' end</td> 
        </tr>
        <tr> 
            <td class="cell-fixed-width"><code>.flex-align-self-center</code></td> 
            <td>Align flex child between the cross-axis' start/end</td> 
        </tr>
        <tr> 
            <td class="cell-fixed-width"><code>.flex-align-self-baseline</code></td> 
            <td>Align flex child to flex baselines</td> 
        </tr> 
        <tr> 
            <td class="cell-fixed-width"><code>.flex-align-self-stretch</code></td> 
            <td>Stretch flex child along the cross-axis</td> 
        </tr>
    </tbody>
</table>
<br>
<blockquote>
<strong>Breaking changes from  v1.0.27 to v1.0.28</strong><br>
Version 1.0.27 had different classes for the Flexbox Layout Model. Version 1.0.28 has new classes which reflect
the purpose and usage of the Flexbox Layout Model much more accurate. You can still use the old classes, for now. They will be
discarted in the future. So it is adviced to update your classes if you have used flexbox utilities.
</blockquote>